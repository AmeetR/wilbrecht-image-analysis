########################################################################
#
# Techila SDK config file
#
########################################################################

# Before first use at least the following parameters should be checked:
# hostname and keystore.

# Macros written in curly braces (e.g. {user.home}) can be used with
# the parameters.
#
# All java properties, environment variables and also all parameters
# defined in this config file are available as macros.
# Additionally {temp} is a temporary directory (same as
# {java.io.tmpdir}) and {inidir} is the directory where the config
# file (this file) is located.


########################################################################
# Techila Server config
#
# server hostname
hostname=35.187.32.217

# server management interface port (default = 25001)
#port=25001


########################################################################
# User config
#
# alias of the key in the keystore (not usually needed)
#alias={user.name}

# keystore filename
keystore={inidir}\admin.jks

# Password dialog class, a graphical dialog is used to ask the
# password from the user. Options graphical and console versions.
# To disable add # to the beginning of line.
passworddialog=fi.techila.user.GraphicalPasswordDialog
#passworddialog=fi.techila.user.ConsolePasswordDialog

# Remember password, with this option enabled the password is asked
# only once and store internally in memory for later use. The password
# is stored only within the same Java instance, not between separate
# processes.
# Valid values = true, false (if not defined = false).
# Use this option carefully!
storepassword=true

# keystore & key password
# It is HIGHLY recommended not to write password here, but instead
# use the password dialog above!
password=PUpC8fPenFEPLKf4ZhP2


########################################################################
# Status Window config
#
# Status window class, a graphical progress bar.
# Uncomment to use.
statuswindow=fi.techila.user.GraphicalStatusWindow

# StatusWindow implementation specific configuration:
# Leave progress bar window open if the projects have errors.
# Valid values = true, false (if not defined = false).
statuswindow.nocloseonerror=true

# StatusWindow font size adjustment. Value 0 = the original size.
# Positive values increase font size.
statuswindow.fontsize=4

# Preferred width of the chart panel
#statuswindow.width=1920
# Preferred height of the chart panel
#statuswindow.height=150


########################################################################
# Temporary directory config
#
# temporary directory, use absolute path here, especially with Matlab
# {inidir}\temp is usually fine.
tempdir={inidir}\temp


########################################################################
# Logging config
#
# Management interface logs.
# Directory for logs, {inidir}\logs\ is usually fine.
logdir={inidir}\logs\
# logfile
# %u = a unique number to resolve conflicts
# %g = the generation number to distinguish rotated logs
logfile=techila_%u_%g.log

# max size of the log file (in bytes) (Default = 1000000 (1 MB))
maxlogsize=1000000

# max number of logfiles
maxlogfiles=10

# Logging level config
# possible values are: 
#   ALL
#   SEVERE (highest value) 
#   WARNING 
#   INFO 
#   CONFIG 
#   FINE 
#   FINER 
#   FINEST (lowest value)
#   OFF

# logging level to the file 
fileloglevel=ALL

# logging level to console
consoleloglevel=SEVERE


########################################################################
# Error logging config. These are the errors that are related to the 
# computation and occur on the workers.
#
# Error file, if defined project errors are appended to the given file.
#errorfile={logdir}\errorfeed

#
# Error directory, projects errors are appended to one file per project
# in this directory
errordir={logdir}\project_errors

# if true the project errors are printed to STDERR (console),
# Valid values = true, false. Default = false
#stderr=true


########################################################################
# Standard Output config.
#
# file where all stdoutputs from the workers are fed.
# Useful for debugging worker code.
#
#stdoutfile={logdir}\techilaout.log

# directory where stdoutputs from the workers are fed. Each project
# will have a subdirectory created.
#stdoutdir={logdir}\workerout


########################################################################
# Standard Error config.
#
# file where all stderrs from the workers are fed. (Not the same as
# errorfile above)
#
#stderrfile={logdir}\techilaerr.log

# directory where stderrs from the workers are fed. Each project
# will have a subdirectory created.
#stderrdir={logdir}\workererr



########################################################################
#
# Some fine-tuning parameters, defaults are usually ok.
#
# Poll time, wait between polling project status from the server.
# In milliseconds. Default = 1000 (1 s).
#polltime=1000

# Wait between download retries (when project is done but the result is not
# yet ready for download). In milliseconds.
#dlretrytime=10000

# Result transfer mode
# If stream is enabled results are downloaded "on-the-fly" otherwise
# the results are downloaded in one package after all results are ready.
# DEPRECATED, this parameter will be removed, specity stream explicitly in code.
#transfermode=stream

# Amount of times to retry command to the server, amount includes
# initial attempt => minimum value = 1. Default 1 = no retry.
# Use this if network connection is not reliable.
# execmaxretrycount=5

# Delay between retry attempts. In milliseconds. Default 10000 (10 s).
#execretrydelay=10000

# Maximum number of results to be transferred at once in streaming mode
# Default -1 = unlimited
maxresultsinstream=1000

# On automatically generated SDKs, some messages are different.
generated=true
